{"version":3,"sources":["components/Wrapper.js","components/ButtonBox.js","components/Button.js","components/Screen.js","App.js","index.js"],"names":["Wrapper","className","this","props","children","React","Component","ButtonBox","Button","onClick","key","value","Screen","mode","max","App","math","a","b","sign","handleChange","e","screenNum","target","setState","num","console","log","resetClickHandler","result","state","invertClickHandler","percentClickHandler","parseFloat","Math","pow","equalsClickHandler","preventDefault","innerHTML","Number","signClickHandler","commaClickHandler","toString","includes","numClickHandler","flat","map","btn","i","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39015bcd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Wrapper.css';\r\n\r\nclass Wrapper extends React.Component{\r\n  render(){\r\n    return(\r\n      <div className='wrapper'>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './ButtonBox.css';\r\n\r\nclass ButtonBox extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className='buttonBox'>\r\n        { this.props.children }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonBox;","import React from \"react\";\r\nimport './Button.css';\r\n\r\nclass Button extends React.Component{\r\n  render(){\r\n    return(\r\n      <button \r\n        className={this.props.className} \r\n        onClick={this.props.onClick}\r\n        key={this.props.key}\r\n        >\r\n        {this.props.value}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport { Textfit } from 'react-textfit';\r\nimport \"./Screen.css\";\r\n\r\nclass Screen extends React.Component{\r\n  render(){\r\n    return(\r\n      <Textfit className='screen' mode='single' max={70}>\r\n        {this.props.value}\r\n      </Textfit>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Screen;","import React from 'react';\nimport Wrapper from './components/Wrapper';\nimport ButtonBox from './components/ButtonBox';\nimport Button from './components/Button';\nimport Screen from './components/Screen';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      sign: '',\n      num: 0,\n      result: 0,\n    };\n  }\n\n  math = (a,b, sign) => {\n    return sign === '+' \n    ? a + b \n    : sign === '-'\n    ? a - b\n    : sign === 'X'\n    ? a * b\n    : a / b\n}\n\n  handleChange = (e) => {\n    let screenNum = e.target.value;\n    this.setState({\n      num: screenNum,\n    })\n    console.log(e.target.value);\n  }\n\n  resetClickHandler = (e) => {\n    this.setState({\n      result: 0,\n      num: 0,\n      sign: '',\n    });\n    console.log('reset', this.state.result);\n  }\n\n  invertClickHandler = (e) => {\n    this.setState({\n      num: \n        this.state.num ? this.state.num * -1 : 0,\n      result: \n        this.state.result ? this.state.result * -1 : 0,\n      sign: '',\n    })\n    // this.state.num > 0 ? this.setState({num: this.state.num * 1})\n    // : this.setState({num: this.state.num * -1}),\n    console.log('invert', this.state.num, this.state.result);\n  }\n\n  percentClickHandler = (e) => {\n    let num = this.state.num ? parseFloat(this.state.num) : 0;\n    let result = this.state.result ? parseFloat(this.state.result) : 0;\n\n    this.setState({\n      num: (num /= Math.pow(100,1)),\n      result: (result /= Math.pow(100,1)),\n      sign: '',\n    });\n  }\n\n  equalsClickHandler = (e) => {\n    e.preventDefault();\n    let value = e.target.innerHTML;\n    if(this.state.sign && this.state.num) {\n      this.setState({\n        result: \n          this.state.num === 0 && this.state.sign === '/'\n          ? 'NaN'\n          : this.math(Number(this.state.result), Number(this.state.num), this.state.sign),\n        sign: '',\n        num: 0,\n      })\n      console.log(this.state.result);\n    }\n  }\n  \n  signClickHandler = (e) => {\n    // if an operator is pressed. sets sign state to selected operator\n    // if no result, but num has state then result = num else result has state so it remains the same\n    // results num state to 0 \n    e.preventDefault();\n    let value = e.target.innerHTML;\n    this.setState({\n      sign: value,\n      result: \n        !this.state.result && this.state.num ? this.state.num : \n        this.math(Number(this.state.result), Number(this.state.num), this.state.sign),\n      num: 0,\n    })\n    // console.log(value);\n    // console.log(this.state.result);\n  }\n\n  commaClickHandler = (e) => {\n    e.preventDefault();\n    let value = e.target.innerHTML;\n    // This event is to add a decimal point if user adds '.' and checks if num already includes '.'\n    this.setState({\n      num: !this.state.num.toString().includes('.') ? this.state.num + value : this.state.num,\n    })\n  }\n\n  numClickHandler = (e) => {\n    e.preventDefault();\n    let value = e.target.innerHTML;\n    // this event updates the num state and the result state \n    // num cannot start with a 0 if it is a whole number, num is being checked if it is a decimal \n    // num will display either 0 or update to a result of the value added\n    this.setState({\n      ...this.state.num,\n      num: \n        this.state.num === 0 && value === '0'\n          ? '0'\n          : this.state.num % 1 === 0\n          ? Number(this.state.num + value) // Number function changes string to num\n          : this.state.num + value,\n      result: !this.state.sign ? 0 : this.state.result, // what does res: mean \n      // sign: '',\n    });\n  }\n\n  render() {\n    const btnValues = [\n      ['C', '+-', '%', '/'],\n      [7,8,9, 'X'],\n      [4,5,6,'-'],\n      [1,2,3, '+'],\n      [0, '.', '='],\n    ];\n    console.log(this.state);\n    return(\n      <>\n        <Wrapper>\n          {/* this screen is being passed a prop to display the num user inputs or the result */}\n          <Screen value={this.state.num ? this.state.num : this.state.result}/>\n          <ButtonBox>\n            {\n              btnValues.flat().map((btn, i) => {\n                return (\n                  <Button\n                    key={i}\n                    className={btn === '=' ? 'equals' : ''}\n                    value={btn}\n                    onChange={this.handleChange}\n                    onClick={\n                      btn === 'C'\n                        ? this.resetClickHandler\n                        : btn === '+-'\n                        ? this.invertClickHandler\n                        : btn === '%'\n                        ? this.percentClickHandler\n                        : btn === '='\n                        ? this.equalsClickHandler\n                        : btn === '/' || btn === 'X' || btn === '+' || btn === '-'\n                        ? this.signClickHandler\n                        : btn === '.'\n                        ? this.commaClickHandler\n                        : this.numClickHandler\n                    }\n                  />\n                )\n              })\n            }\n          </ButtonBox>\n        </Wrapper>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.render(\n<React.StrictMode>\n  <App />\n</React.StrictMode>,\ndocument.getElementById('root'));"],"sourceRoot":""}