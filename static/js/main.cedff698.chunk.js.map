{"version":3,"sources":["components/Wrapper.js","components/ButtonBox.js","components/Button.js","components/Screen.js","App.js","index.js"],"names":["Wrapper","className","this","props","children","React","Component","ButtonBox","Button","onClick","key","value","Screen","mode","max","App","math","a","b","sign","handleChange","e","screenNum","target","setState","num","console","log","resetClickHandler","result","state","invertClickHandler","percentClickHandler","parseFloat","Math","pow","equalsClickHandler","preventDefault","innerHTML","Number","signClickHandler","commaClickHandler","toString","includes","numClickHandler","flat","map","btn","i","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cedff698.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Wrapper.css';\r\n\r\nclass Wrapper extends React.Component{\r\n  render(){\r\n    return(\r\n      <div className='wrapper'>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './ButtonBox.css';\r\n\r\nclass ButtonBox extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className='buttonBox'>\r\n        { this.props.children }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonBox;","import React from \"react\";\r\nimport './Button.css';\r\n\r\nclass Button extends React.Component{\r\n  render(){\r\n    return(\r\n      <button \r\n        className={this.props.className} \r\n        onClick={this.props.onClick}\r\n        key={this.props.key}\r\n        >\r\n        {this.props.value}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport { Textfit } from 'react-textfit';\r\nimport \"./Screen.css\";\r\n\r\nclass Screen extends React.Component{\r\n  render(){\r\n    return(\r\n      <Textfit className='screen' mode='single' max={70}>\r\n        {this.props.value}\r\n      </Textfit>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Screen;","import React from 'react';\r\nimport Wrapper from './components/Wrapper';\r\nimport ButtonBox from './components/ButtonBox';\r\nimport Button from './components/Button';\r\nimport Screen from './components/Screen';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sign: '',\r\n      num: 0,\r\n      result: 0,\r\n    };\r\n  }\r\n\r\n  math = (a,b, sign) => {\r\n    return sign === '+' \r\n    ? a + b \r\n    : sign === '-'\r\n    ? a - b\r\n    : sign === 'X'\r\n    ? a * b\r\n    : a / b\r\n}\r\n\r\n  handleChange = (e) => {\r\n    let screenNum = e.target.value;\r\n    this.setState({\r\n      num: screenNum,\r\n    })\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  resetClickHandler = (e) => {\r\n    this.setState({\r\n      result: 0,\r\n      num: 0,\r\n      sign: '',\r\n    });\r\n    console.log('reset', this.state.result);\r\n  }\r\n\r\n  invertClickHandler = (e) => {\r\n    this.setState({\r\n      num: \r\n        this.state.num ? this.state.num * -1 : 0,\r\n      result: \r\n        this.state.result ? this.state.result * -1 : 0,\r\n      sign: '',\r\n    })\r\n    // this.state.num > 0 ? this.setState({num: this.state.num * 1})\r\n    // : this.setState({num: this.state.num * -1}),\r\n    console.log('invert', this.state.num, this.state.result);\r\n  }\r\n\r\n  percentClickHandler = (e) => {\r\n    let num = this.state.num ? parseFloat(this.state.num) : 0;\r\n    let result = this.state.result ? parseFloat(this.state.result) : 0;\r\n\r\n    this.setState({\r\n      num: (num /= Math.pow(100,1)),\r\n      result: (result /= Math.pow(100,1)),\r\n      sign: '',\r\n    });\r\n  }\r\n\r\n  equalsClickHandler = (e) => {\r\n    e.preventDefault();\r\n    let value = e.target.innerHTML;\r\n    if(this.state.sign && this.state.num) {\r\n      this.setState({\r\n        result: \r\n          this.state.num === 0 && this.state.sign === '/'\r\n          ? 'NaN'\r\n          : this.math(Number(this.state.result), Number(this.state.num), this.state.sign),\r\n        sign: this.state.sign,\r\n        num: 0,\r\n      })\r\n      console.log(this.state.result);\r\n    }\r\n  }\r\n  \r\n  signClickHandler = (e) => {\r\n    // if an operator is pressed. sets sign state to selected operator\r\n    // if no result, but num has state then result = num else result has state so it remains the same\r\n    // results num state to 0 \r\n    e.preventDefault();\r\n    let value = e.target.innerHTML;\r\n    this.setState({\r\n      sign: value,\r\n      result: \r\n        !this.state.result && this.state.num ? this.state.num : \r\n        this.math(Number(this.state.result), Number(this.state.num), this.state.sign),\r\n      num: 0,\r\n    })\r\n  }\r\n\r\n  commaClickHandler = (e) => {\r\n    e.preventDefault();\r\n    let value = e.target.innerHTML;\r\n    // This event is to add a decimal point if user adds '.' and checks if num already includes '.'\r\n    this.setState({\r\n      num: !this.state.num.toString().includes('.') ? this.state.num + value : this.state.num,\r\n    })\r\n  }\r\n\r\n  numClickHandler = (e) => {\r\n    e.preventDefault();\r\n    let value = e.target.innerHTML;\r\n    // this event updates the num state and the result state \r\n    // num cannot start with a 0 if it is a whole number, num is being checked if it is a decimal \r\n    // num will display either 0 or update to a result of the value added\r\n    this.setState({\r\n      ...this.state.num,\r\n      num: \r\n        this.state.num === 0 && value === '0'\r\n          ? '0'\r\n          : this.state.num % 1 === 0\r\n          ? Number(this.state.num + value) // Number function changes string to num\r\n          : this.state.num + value,\r\n      result: !this.state.sign ? 0 : this.state.result,  \r\n    });\r\n  }\r\n\r\n  render() {\r\n    const btnValues = [\r\n      ['C', '+-', '%', '/'],\r\n      [7,8,9, 'X'],\r\n      [4,5,6,'-'],\r\n      [1,2,3, '+'],\r\n      [0, '.', '='],\r\n    ];\r\n    console.log(this.state);\r\n    return(\r\n      <>\r\n        <Wrapper>\r\n          {/* this screen is being passed a prop to display the num user inputs or the result */}\r\n          <Screen value={this.state.num ? this.state.num : this.state.result}/>\r\n          <ButtonBox>\r\n            {\r\n              btnValues.flat().map((btn, i) => {\r\n                return (\r\n                  <Button\r\n                    key={i}\r\n                    className={btn === '=' ? 'equals' : ''}\r\n                    value={btn}\r\n                    onChange={this.handleChange}\r\n                    onClick={\r\n                      btn === 'C'\r\n                        ? this.resetClickHandler\r\n                        : btn === '+-'\r\n                        ? this.invertClickHandler\r\n                        : btn === '%'\r\n                        ? this.percentClickHandler\r\n                        : btn === '='\r\n                        ? this.equalsClickHandler\r\n                        : btn === '/' || btn === 'X' || btn === '+' || btn === '-'\r\n                        ? this.signClickHandler\r\n                        : btn === '.'\r\n                        ? this.commaClickHandler\r\n                        : this.numClickHandler\r\n                    }\r\n                  />\r\n                )\r\n              })\r\n            }\r\n          </ButtonBox>\r\n        </Wrapper>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.render(\r\n<React.StrictMode>\r\n  <App />\r\n</React.StrictMode>,\r\ndocument.getElementById('root'));"],"sourceRoot":""}